import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
iris = load_iris()
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
df['species'] = iris.target
print(df.head())
X = df.drop('species', axis=1)
y = df['species']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)
svm = SVC(kernel='rbf', C=1)
svm.fit(X_train, y_train)
y_pred=svm.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
print("Classification report:", classification_report(y_test, y_pred))
print("Confusion matrix:", confusion_matrix(y_test, y_pred))
species_name = iris.target_names
y_pred_species = [species_name[i] for i in y_pred]
y_test_species = [species_name[i] for i in y_test]
print("Predicted Species:", y_pred_species[:5])
print("Actual Species:", y_test_species[:5])
